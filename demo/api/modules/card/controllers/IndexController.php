<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/8/28
 * Time: 21:20
 */
namespace api\modules\card\controllers;


use api\modules\card\logic\Dynamic;
use api\modules\card\logic\Index;
use common\helper\CardRecord;
use common\helper\Common;
use common\models\card\BusinessCards;
use common\models\card\EnterpriseAutographFabulous;
use common\models\common\ActivityStatus;
use common\models\dynamic\EnterpriseDynamic;
use common\models\dynamic\EnterpriseDynamicComment;
use common\models\dynamic\EnterpriseDynamicFabulous;
use common\models\enterprise\EnterpriseUser;
use common\models\goods\ShopInfo;
use common\models\operation\UserOperationRecord;
use common\models\site\EnterpriseInformation;
use common\models\site\EnterpriseRecruit;
use common\models\wechat\SmallWechatUser;
use common\program\Entrance;
use yii\rest\ActiveController;

class IndexController extends ActiveController {

    public $modelClass = '';

    /**
     * @var Index
     */
    public $home;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if(!\Yii::$app->request->isPost){
            return ["code"=>400,"message"=>"请求方式错误"];
        }
        $this->home = new Index();
    }

    /**
     * @return null|static
     * @throws \Exception
     * 名片列表
     */
    public function actionList(){
        $openid = \api\models\get_user_info("openid");
        $cards = $this->home->getCard($openid);
        return [
            "code"=> 200 ,
            "data"=>[
                "cards"=> $cards
            ] ,
            "message"=>"请求成功"
        ];
    }


    /**
     * @return array
     * 企业官网
     */
    public function actionSite(){
        $enterprise_id = \Yii::$app->request->post("enterprise_id");
        if(empty($enterprise_id) || !is_numeric($enterprise_id)){
            return ["code"=> 400 , "message"=>"请求参数错误"];
        }
        $site = $this->home->getSite($enterprise_id);
        if(!\api\models\isStaffIdentity()){
            $card_id = \Yii::$app->request->post("card_id");
            $card = BusinessCards::findOne($card_id);
            if(!empty($card)){
                (new CardRecord($card))->updateOption(["see_website"=>1]);
                UserOperationRecord::remember(\api\models\get_user_info("openid") , $card_id,UserOperationRecord::OPERATION_ACTION_SEE , UserOperationRecord::PLACE_WEBSITE);
            }
        }
        return [
            "code" => 200,
            "data" => $site,
            "message" => "请求成功"
        ];
    }


    /**
     * @return array|\yii\db\ActiveRecord[]
     * 名片详情
     */
    public function actionDetail(){
        $card_id = \Yii::$app->request->post("card_id");
        //转发的渠道id
        $user_id = \Yii::$app->request->post("user_id");
        if(empty($card_id) || !is_numeric($card_id)){
            return ["code" => 400 , "message" => "请求参数错误"];
        }
        $openid = \api\models\get_user_info("openid");
        $card = BusinessCards::find()
            ->where(["id"=>$card_id,"status" => ActivityStatus::STATUS_NORMAL])
            ->asArray()
            ->select(["id","openid","corpid","userid","popularity","reliable","share","voice","address","autograph","portrait","name","tel","autograph","autograph_fabulous","wechat","position","company","email","details"])
            ->one();
        if(empty($card_id) || !is_numeric($card_id)){
            return ["code" => 400 , "message" => "请求参数错误"];
        }
        if(empty($card)){
            return ["code" => 404 ,"message" => "名片不存在"];
        }
        $enterprise_user = EnterpriseUser::findByCorpidAndUserId($card["corpid"],$card["userid"]);
        $headimgurl = $card["portrait"];
        $card["headimgurl"] = $headimgurl;
        if(!empty($card["openid"]) && !empty($enterprise_user) && !empty($enterprise_user->avatar)){
            $card["headimgurl"] = $enterprise_user->avatar;
        }
        $fabulous = EnterpriseAutographFabulous::findOne(["card_id"=>$card_id,"openid"=>$openid]);
        $portrait = explode("?",$card["portrait"]);
        $card["portrait"] = !empty($portrait[0]) ? $portrait[0] : $card["portrait"];
        unset($card["openid"] , $card["corpid"],$card["userid"]);
        $card["is_autograph_status"] = $fabulous ? 1 : 0;
        $record_id = $this->home->storageCard($card["id"], $openid , $user_id);
        UserOperationRecord::remember($openid , $card_id,UserOperationRecord::OPERATION_ACTION_SEE , UserOperationRecord::PLACE_CARD);
        $see = UserOperationRecord::getSeePeople($card_id);
        $card['see_img'] = $see['see_img'];
        $card['see_num'] = $see['see_num'];
        return [
            "code" => 200,
            "data" => [
                "card" => $card,
                "record_id" => $record_id
            ],
            "message" => "请求成功"
        ];
    }


    /**
     * @return array
     * 签名点赞
     */
    public function actionAutographFabulous(){
        $card_id = \Yii::$app->request->post("card_id");
        $openid = \api\models\get_user_info("openid");
        $type = \Yii::$app->request->post("type",1);
        if(empty($card_id) || !is_numeric($card_id)){
            return ["code"=>400,"message"=>"请求参数错误"];
        }
        if($type != EnterpriseAutographFabulous::TYPE_AUTOGRAPH && $type != EnterpriseAutographFabulous::TYPE_RELIABLE){
            return ["code" => 400 ,"message" => "请求type类型错误"];
        }
        $card = BusinessCards::findOne($card_id);
        if(empty($card) || $card->status != ActivityStatus::STATUS_NORMAL){
            return ["code"=>400,"message"=>"动态不存在或则已经删除"];
        }
        $fabulous = EnterpriseAutographFabulous::findOne(["card_id"=>$card_id,"openid"=>$openid,"type" => $type]);
        if(!empty($fabulous)){
            return ["code"=>400,"message"=>"请勿重新操作"];
        }
        $fabulous = new EnterpriseAutographFabulous();
        $fabulous->openid = $openid;
        $fabulous->enterprise_id = $card->enterprise_id;
        $fabulous->card_id = $card_id;
        $fabulous->status = ActivityStatus::STATUS_NORMAL;
        $fabulous->type = $type;
        $fabulous->created_at = time();
        $fabulous->updated_at = time();
        if($fabulous->save()){
            if($fabulous->type == EnterpriseAutographFabulous::TYPE_RELIABLE){
                //靠谱
//                $card->updateCounters(["reliable"=>1]);
                (new CardRecord($card))->updateOption(["reliable"=>1]);

                UserOperationRecord::remember(\api\models\get_user_info("openid") , $card->id, UserOperationRecord::OPERATION_ACTION_FABULOUS,UserOperationRecord::PLACE_RELIABLE);
            }elseif ($fabulous->type == EnterpriseAutographFabulous::TYPE_AUTOGRAPH){
                //签名
//                $card->updateCounters(["autograph_fabulous"=>1]);
                (new CardRecord($card))->updateOption(["autograph_fabulous"=>1]);
                UserOperationRecord::remember(\api\models\get_user_info("openid") , $card->id, UserOperationRecord::OPERATION_ACTION_FABULOUS,UserOperationRecord::PLACE_AUTOGRAPH);
            }
            return ["code"=>200,"message"=>"操作成功"];
        }
        return ["code"=>400,"点赞失败"];
    }


    /**
     * @return array
     * 动态
     */
    public function actionDynamic(){
        $enterprise_id = \Yii::$app->request->post("enterprise_id");
        if(empty($enterprise_id) || !is_numeric($enterprise_id)){
            return ["code" => 400 , "message" => "请求参数错误"];
        }
        $dynamic = new Dynamic($enterprise_id);
        $card_id = \Yii::$app->request->post("card_id");
        $dynamic->handle($card_id);
        return [
            "code" => 200 ,
            "data" => $dynamic->get(),
            "message" => "请求成功"
        ];
    }


    /**
     * @return array
     * 动态详情
     */
    public function actionDynamicDetail(){
        $dynamic_id = \Yii::$app->request->post("dynamic_id");
        if(empty($dynamic_id) || !is_numeric($dynamic_id)){
            return ["code" => 400, "message" => "请求参数错误"];
        }
        $dynamic = EnterpriseDynamic::findOne($dynamic_id);
        if(empty($dynamic)){
            return ["code"=>404 , "message" =>"动态不存在"];
        }
        $dynamic = $dynamic->toArray();
        unset($dynamic["updated_at"]);
        $dynamic["created_at"] = Common::timestampToChat($dynamic["created_at"]);
        return ["code" => 200 , "data"=>$dynamic , "message" => "数据请求成功"];
    }


    /**
     * @return array
     * 添加动态评论
     */
    public function actionAddComment(){
        if(\api\models\isStaffIdentity()){
            $info = \api\models\get_card_info();
            $openid = $info["openid"];
            $nickname = $info["name"];
        }else{
            $info = \api\models\get_user_info();
            $openid = $info["openid"];
            $nickname = $info["nickname"];
        }
        $openid = \api\models\getOpenidByUserIdentity();
        $dynamic_id = \Yii::$app->request->post("dynamic_id");
        if(empty($dynamic_id) || !is_numeric($dynamic_id)){
            return ["code"=>400,"message"=>"请求参数错误"];
        }
        $dynamic=  EnterpriseDynamic::findOne($dynamic_id);
        if(empty($dynamic) || $dynamic->status != ActivityStatus::STATUS_NORMAL){
            return ["code"=>400,"message"=>"动态不存在或则已经删除"];
        }
        $comment = \Yii::$app->request->post("comment");
        if(empty(trim($comment))){
            return ["code"=>400,"message"=>"内容不能为空"];
        }
        $dynamic_comment = new EnterpriseDynamicComment();
        $dynamic_comment->comment = $comment;
        $dynamic_comment->openid = $openid;
        $dynamic_comment->nickname = (string)$nickname;
        $dynamic_comment->created_at = time();
        $dynamic_comment->updated_at = time();
        $dynamic_comment->dynamic_id = $dynamic_id;
        $dynamic_comment->enterprise_id = $dynamic->enterprise_id;
        if($dynamic_comment->save()){
            if(\api\models\isStaffIdentity()){
                $card_id = \api\models\get_card_id();
                $card = BusinessCards::findOne($card_id);
                $user_info = [];
                if(!empty($card)){
                    return ["code" => 200 ,"user_info" => [
                        "nickname" => $card->name
                    ], "message" => "评论发布成功"];
                }
            }
            return ["code" => 200 , "message" => "评论发布成功"];
        }
        return ["code"=>400 , "message" => "评论失败"];
    }


    /**
     * @return array
     * 分享接口
     */
    public function actionShareCallback(){
        $card_id = \Yii::$app->request->post("card_id");
        if(empty($card_id) || !is_numeric($card_id)){
            return ["code"=>400 , "message"=>"请求参数错误"];
        }
        $card = BusinessCards::findOne($card_id);
        if((new CardRecord($card))->updateOption(["share"=>1])){
            if(!\api\models\isStaffIdentity()){
                UserOperationRecord::remember(\api\models\get_user_info("openid") , $card->id, UserOperationRecord::OPERATION_ACTION_SHARE,UserOperationRecord::PLACE_CARD);
            }
            return ["code"=>200,"message"=>"分享成功"];
        }
        return ["code"=>400 , "message" => "分享失败"];
    }


    /**
     * @return array
     * 点赞
     */
    public function actionFabulous(){
        $dynamic_id = \Yii::$app->request->post("dynamic_id");
        if(\api\models\isStaffIdentity()){
            $user = \api\models\get_card_info();
            $user["nickname"] = $user["name"];
        }else{
            $user = \api\models\get_user_info();
        }
        if(empty($dynamic_id) || !is_numeric($dynamic_id)){
            return ["code"=>400,"message"=>"请求参数错误"];
        }
        $dynamic=  EnterpriseDynamic::findOne($dynamic_id);
        if(empty($dynamic) || $dynamic->status != ActivityStatus::STATUS_NORMAL){
            return ["code"=>400,"message"=>"动态不存在或则已经删除"];
        }
        $fabulous = EnterpriseDynamicFabulous::findOne(["dynamic_id"=>$dynamic_id,"openid"=>$user["openid"]]);
        if(!empty($fabulous)){
            return ["code"=>400,"message"=>"请勿重新点赞"];
        }
        $fabulous = new EnterpriseDynamicFabulous();
        $fabulous->openid = $user["openid"];
        $fabulous->enterprise_id = $dynamic->enterprise_id;
        $fabulous->dynamic_id = $dynamic_id;
        $fabulous->status = ActivityStatus::STATUS_NORMAL;
        $fabulous->nickname = $user["nickname"];
        $fabulous->created_at = time();
        $fabulous->updated_at = time();
        if($fabulous->save()){
            UserOperationRecord::remember(\api\models\get_user_info("openid") , $dynamic->card_id, UserOperationRecord::OPERATION_ACTION_FABULOUS,UserOperationRecord::PLACE_DYNAMIC);
            if(\api\models\isStaffIdentity()){
                $card_id = \api\models\get_card_id();
                $card = BusinessCards::findOne($card_id);
                $user_info = [];
                if(!empty($card)){
                    return ["code" => 200 ,"user_info" => [
                        "nickname" => $card->name
                    ], "message" => "点赞成功"];
                }
            }
            return ["code"=>200,"message"=>"点赞成功"];
        }
        return ["code"=>400,"点赞失败"];
    }


    /**
     * @return array
     * @throws \EasyWeChat\Kernel\Exceptions\InvalidArgumentException
     * 海报
     */
    public function actionPoster(){
        $card_id = \Yii::$app->request->post("card_id");
        if(empty($card_id) || !is_numeric($card_id)){
            return ["code" => 400, "message" => "请求参数错误"];
        }
        $card = BusinessCards::findOne($card_id);
        if(empty($card) || $card->status != ActivityStatus::STATUS_NORMAL){
            return ["code" => 400 , "message" => "名片不存在或已删除"];
        }
        $qrcode = $card->getQrcode();
        $card = $card->getAttributes();
        $data["portrait"] = $card["portrait"];
        $data["name"] = $card["name"];
        $data["tel"] = $card["tel"];
        $data["position"] = $card["position"];
        $data["company"] = $card["company"];
        $data["qrcode"] = $qrcode;
        return ["code" => 200 , "data" => $data , "message" => "数据请求成功"];
    }


    /**
     * @return array
     * @throws \Exception
     * 呼叫电话回调
     */
    public function actionCallPhone(){
        $card_id = \Yii::$app->request->post("card_id");
        $result = $this->findCard($card_id);
        if(is_array($result)){
            return $result;
        }
//        $result->updateCounters(["call_phone" => 1]);
        (new CardRecord($result))->updateOption(["call_phone"=>1]);
        UserOperationRecord::remember(\api\models\get_user_info("openid") , $card_id, UserOperationRecord::OPERATION_ACTION_CALL,UserOperationRecord::PLACE_PHONE);
        return ["code" => 200 , "message" => "数据请求成功"];
    }


    /**
     * @return IndexController|array|null
     * @throws \Exception
     * 拷贝电话
     */
    public function actionCopyPhone(){
        $card_id = \Yii::$app->request->post("card_id");
        $result = $this->findCard($card_id);
        if(is_array($result)){
            return $result;
        }
//        $result->updateCounters(["copy_phone" => 1]);
        (new CardRecord($result))->updateOption(["copy_phone"=>1]);
        UserOperationRecord::remember(\api\models\get_user_info("openid") , $card_id, UserOperationRecord::OPERATION_ACTION_COPY,UserOperationRecord::PLACE_PHONE);
        return ["code" => 200 , "message" => "数据请求成功"];
    }


    /**
     * @return IndexController|array|null
     * @throws \Exception
     * 拷贝邮箱
     */
    public function actionCopyEmail(){
        $card_id = \Yii::$app->request->post("card_id");
        $result = $this->findCard($card_id);
        if(is_array($result)){
            return $result;
        }
//        $result->updateCounters(["copy_email" => 1]);
        (new CardRecord($result))->updateOption(["copy_email"=>1]);
        UserOperationRecord::remember(\api\models\get_user_info("openid") , $card_id, UserOperationRecord::OPERATION_ACTION_COPY,UserOperationRecord::PLACE_EMAIL);
        return ["code" => 200 , "message" => "数据请求成功"];
    }


    /**
     * @return IndexController|array|null
     * @throws \Exception
     * 拷贝微信
     */
    public function actionCopyWechat(){
        $card_id = \Yii::$app->request->post("card_id");
        $result = $this->findCard($card_id);
        if(is_array($result)){
            return $result;
        }
//        $result->updateCounters(["copy_wechat" => 1]);
        (new CardRecord($result))->updateOption(["copy_wechat"=>1]);
        UserOperationRecord::remember(\api\models\get_user_info("openid") , $card_id, UserOperationRecord::OPERATION_ACTION_COPY,UserOperationRecord::PLACE_WECHAT);
        return ["code" => 200 , "message" => "数据请求成功"];
    }

    /**
     * @return IndexController|array|null
     * 商城分享
     */
    public function actionShopShare(){
        $card_id = \Yii::$app->request->post("card_id");
        $result = $this->findCard($card_id);
        if(is_array($result)){
            return $result;
        }
//        $result->updateCounters(["shop_share" => 1]);
        (new CardRecord($result))->updateOption(["shop_share"=>1]);
        UserOperationRecord::remember(\api\models\get_user_info("openid") , $card_id, UserOperationRecord::OPERATION_ACTION_SHARE,UserOperationRecord::PLACE_MALL);
        return ["code" => 200 , "message" => "数据请求成功"];
    }


    /**
     * @return IndexController|array|null
     * 保存通讯录
     */
    public function actionSavePhone(){
        $card_id = \Yii::$app->request->post("card_id");
        $result = $this->findCard($card_id);
        if(is_array($result)){
            return $result;
        }
//        $result->updateCounters(["shop_share" => 1]);
        (new CardRecord($result))->updateOption(["save_phone"=>1]);
        UserOperationRecord::remember(\api\models\get_user_info("openid") , $card_id, UserOperationRecord::OPERATION_ACTION_SAVE,UserOperationRecord::PLACE_PHONE);
        return ["code" => 200 , "message" => "数据请求成功"];
    }

    /**
     * @return IndexController|array|null
     * 播放语音
     */
    public function actionPlayVoice(){
        $card_id = \Yii::$app->request->post("card_id");
        $result = $this->findCard($card_id);
        if(is_array($result)){
            return $result;
        }
//        $result->updateCounters(["shop_share" => 1]);
        (new CardRecord($result))->updateOption(["play_voice"=>1]);
        UserOperationRecord::remember(\api\models\get_user_info("openid") , $card_id, UserOperationRecord::OPERATION_PLAY,UserOperationRecord::PLACE_AUTOGRAPH_VOICE);
        return ["code" => 200 , "message" => "数据请求成功"];
    }


    /**
     * @return IndexController|array|null
     * 网站分享
     */
    public function actionSiteShare(){
        $card_id = \Yii::$app->request->post("card_id");
        if(!empty($card_id)){
            $result = $this->findCard($card_id);
            if(is_array($result)){
                return $result;
            }
//            $result->updateCounters(["site_share" => 1]);
            (new CardRecord($result))->updateOption(["site_share"=>1]);
            UserOperationRecord::remember(\api\models\get_user_info("openid") , $card_id, UserOperationRecord::OPERATION_ACTION_SHARE,UserOperationRecord::PLACE_WEBSITE);
        }
        return ["code" => 200 , "message" => "数据请求成功"];
    }
    

    /**
     * @param $card_id
     * @return array|null|static
     * 获取名片
     */
    protected function findCard($card_id){
        if(empty($card_id) || !is_numeric($card_id)){
            return ["code" => 400, "message" => "请求参数错误"];
        }
        $card = BusinessCards::findOne($card_id);
        if(empty($card) || $card->status != ActivityStatus::STATUS_NORMAL){
            return ["code" => 400 , "message" => "名片不存在或已删除"];
        }
        return $card;
    }

    /**
     * @return array
     * 资讯详情
     */
    public function actionInformation(){
        $id = \Yii::$app->request->post("id");
        if(empty($id) || !is_numeric($id)){
            return ["code" => 400 , "message" => "请求参数错误"];
        }
        $enterprise_information = EnterpriseInformation::findOne($id);
        if(empty($enterprise_information)){
            return ["code" => 400 , "message" => "资讯不存在"];
        }
        $enterprise_information->created_at = date("Y-m-d H:i:s" , $enterprise_information->created_at);
        $data = $enterprise_information->toArray(["img","title","details","created_at"]);
        $enterprise_id = \Yii::$app->request->post("enterprise_id");
        $shop_info = ShopInfo::findByEnterpriseId($enterprise_id);
        if(!empty($shop_info)){
            $data["enterprise_name"] = $shop_info->name;
        }
        return ["code" => 200 , "data" => $data, "message" => "数据请求成功"];
    }

    /**
     * @return array
     * 招聘详情
     */
    public function actionRecruit(){
        $id = \Yii::$app->request->post("id");
        if(empty($id) || !is_numeric($id)){
            return ["code" => 400 , "message" => "请求参数错误"];
        }
        $enterprise_recruit = EnterpriseRecruit::findOne($id);
        $enterprise_recruit->created_at = date("Y-m-d H:i:s", $enterprise_recruit->created_at);
        $data = $enterprise_recruit->toArray(["position","num","major","phone","education","details","created_at"]);
        $enterprise_id = \Yii::$app->request->post("enterprise_id");
        $shop_info = ShopInfo::findByEnterpriseId($enterprise_id);
        if(!empty($shop_info)){
            $data["enterprise_name"] = $shop_info->name;
        }
        return ["code" => 200 , "data" => $data, "message" => "数据请求成功"];
    }

}