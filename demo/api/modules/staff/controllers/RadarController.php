<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/7/4
 * Time: 11:32
 */
namespace api\modules\staff\controllers;

use api\modules\staff\logic\Radar;
use common\helper\CardRecord;
use common\models\card\BusinessCards;
use common\models\card\BusinessCardsRecords;
use yii\db\Exception;
use yii\rest\Controller;

class RadarController extends Controller{

    public $modelClass = '';

    public $card_id;

    /**
     * @var Radar
     */
    public $radar;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if(!\Yii::$app->request->isPost){
            return ["code"=>400,"message"=>"请求方式错误"];
        }
        //todo card_id 的获取路径待处理
        $this->card_id = \api\models\get_card_id();
        if(empty($this->card_id) || !is_numeric($this->card_id)){
            return ["code" => 400 ,"message" => "请求参数错误"];
        }
        $this->radar = new Radar($this->card_id);
    }


    /**
     * @return array
     * 操作记录
     */
    public function actionTime(){
        return [
            "code" => 200,
            "data" => $this->radar->getOperationRecord(),
            "message" => "请求成功"
        ];
    }

    /**
     * @return array
     * 行为
     */
    public function actionBehavior(){
        $time_between = \Yii::$app->request->post("time_between");
        if(!in_array($time_between , Radar::$time_between)){
            return ["code" => 400 , "message"=>"请求参数错误"];
        }
        return ["code"=>200,"data"=>$this->radar->getBehavior($time_between) , "message"=>"请求成功"];
    }

    /**
     * @return array
     * 获取任务
     */
    public function actionTask(){
        $year = \Yii::$app->request->post("year");
        $month = \Yii::$app->request->post("month");
        $day = \Yii::$app->request->post("day");
        if(empty($year) || empty($month) || empty($day)){
            return ["code" => 400 , "message" => "请求参数错误"];
        }
        return ["code" => 200 , "data"=>$this->radar->getTask($year,$month,$day) , "message" => "请求成功"];
    }

    /**
     * @return array
     * 删除任务
     */
    public function actionDeleteTask(){
        $task_id = \Yii::$app->request->post("task_id");
        if(empty($task_id) || !is_numeric($task_id)){
            return ["code"=>400 ,"message"=>"请求参数错误"];
        }
        if($this->radar->deleteTask($task_id)){
            return ["code"=>200 , "message"=>"删除成功"];
        }
        return ["code"=>400 ,"message" => "删除失败"];
    }


    /**
     * @return array
     * 公海池
     */
    public function actionWaters(){
        if(empty($this->card_id) || !is_numeric($this->card_id)){
            return ["code" => 400 , "message" => "请求参数错误"];
        }
        return ["code" => 200 , "data" =>  [
            "waters_customer" => $this->radar->waters(),
            "integral" => $this->radar->getIntegral(),
        ] , "message" => "数据请求成功"];
    }

    /**
     * @return array
     * 客户领取
     */
    public function actionCustomerReceive(){
        $record_id = \Yii::$app->request->post("customer_id");
        if(empty($record_id) || !is_numeric($record_id)){
            return ["code" => 400 ,"message" => "请求参数错误"];
        }
        $transaction = \Yii::$app->db->beginTransaction();
        try{
            $cards_records = BusinessCardsRecords::findOne($record_id);
            if(empty($cards_records)){
                return ["code" => 400 ,"message" => "用户不存在"];
            }
            if(!empty($cards_records->card_id)){
                return ["code" => 400 , "message" => "该客户已经被领取了"];
            }
            $card = BusinessCards::findOne($this->card_id);
            if(empty($card)){
                return ["code" => 400 ,"message" => "名片用户不存在"];
            }
            if($card->integral < $cards_records->need_integral){
                return ["code" => 400 , "message" => "当前积分不足"];
            }
            $cards_records->card_id = $this->card_id;
            $cards_records->receive_at = time();
            if($cards_records->save()){
                $need_integral = $cards_records->need_integral > 0 ? $cards_records->need_integral : 1;
                if($need_integral > 0){
                    if(!$card->updateCounters(["integral" => -$need_integral])){
                        throw new Exception("积分更新失败");
                    }
                    $create_card = BusinessCards::findOne($cards_records->create_user_id);
                    if($create_card && !$create_card->updateCounters(["integral" => $need_integral])){
                        throw new Exception("积分增加失败");
                    }
                }
                $transaction->commit();
                return ["code" => 200 , "message" => "领取成功"];
            }
        }catch (Exception $e){
            $transaction->rollBack();
            return ["code" => 400 ,"message" => "领取失败"];
        }
    }

    /**
     * @return array
     * 备注信息
     */
    public function actionRemark(){
        $record_id = \Yii::$app->request->post("customer_id");
        $remark = \Yii::$app->request->post("remark");
        if(empty($record_id) || !is_numeric($record_id)){
            return ["code" => 400 ,"message" => "请求参数错误"];
        }
        if(empty($remark)){
            return ["code" => 400 ,"message" => "请填写备注信息"];
        }
        $cards_records = BusinessCardsRecords::findOne($record_id);
        if(empty($cards_records)){
            return ["code" => 400 ,"message" => "用户不存在"];
        }
        $cards_records->remark = $remark;
        if($cards_records->save()){
            return ["code" => 200 , "message" => "修改成功"];
        }
        return ["code" => 400 , "message" => "修改失败"];
    }


    /**
     * @return array
     * 我的客户
     */
    public function actionMyCustomer(){
        if(empty($this->card_id) || !is_numeric($this->card_id)){
            return ["code" => 400 , "message" => "请求参数错误"];
        }
        return ["code" => 200 , "data" => [
            "customer" => $this->radar->UserCustomer(),
            "integral" => $this->radar->getIntegral(),
        ] , "message" => "数据请求成功"];
    }

    /**
     * @return array
     * 释放客户
     */
    public function actionRelease(){
        if(empty($this->card_id) || !is_numeric($this->card_id)){
            return ["code" => 400 , "message" => "请求参数错误"];
        }
        $record_id = \Yii::$app->request->post("customer_id");
        $cards_records = BusinessCardsRecords::findOne($record_id);
        if(empty($cards_records)){
            return ["code" => 400 , "message" => "客户不不存在"];
        }
        if($cards_records->card_id == 0){
            return ["code" => 400 , "message" => "该客户已经释放了"];
        }
        if($cards_records->card_id != $this->card_id){
            return ["code" => 400 , "message" => "该客户不属于你"];
        }
        $cards_records->card_id = 0;
        if($cards_records->save()){
            return ["code" => 200 , "message" => "释放成功"];
        }
        return ["code" => 400 , "message" => "释放失败"];
    }


}