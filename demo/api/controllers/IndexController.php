<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/4/17
 * Time: 14:04
 */
namespace api\controllers;

use common\enterprise\Message;
use common\models\card\BusinessCards;
use common\models\card\BusinessCardsRecords;
use common\models\enterprise\EnterpriseFormId;
use common\models\setting\SmallProgram;
use common\models\wechat\SmallWechatUser;
use EasyWeChat\Factory;
use pithyone\wechat\Message\MPNewsArticle;
use pithyone\wechat\Message\NewsArticle;
use Symfony\Component\Cache\Simple\RedisCache;
use yii\rest\ActiveController;
use common\program\Entrance;

class IndexController extends ActiveController {

    public $modelClass = "";

    public function init(){
        parent::init(); // TODO: Change the autogenerated stub
        if(!\Yii::$app->request->isPost){
            return ["code"=>400,"message"=>"请求方式错误"];
        }
    }

    /**
     * @throws \EasyWeChat\Kernel\Exceptions\InvalidConfigException
     * 获取token
     */
    public function actionGetToken(){
        $request = \Yii::$app->request;
        $code = $request->post("code");
        $business_id = $request->post("enterprise_id");
        if(empty($business_id) || !is_numeric($business_id) || empty($code)){
            return ["code"=>400 ,"message"=>"请求参数错误"];
        }
        $app = Entrance::instance($business_id);
        $result = $app->auth->session($code);
        if(!isset($result["session_key"])){
            return ["code"=>400,"message"=>$result["errmsg"]];
        }
        $token = (new Entrance($business_id))->__grantToken($result);
        return $token;
    }


    /**
     * @return array
     * @throws \EasyWeChat\Kernel\Exceptions\DecryptException
     * 用户登录
     */
    public function actionLogin(){
        $token = \Yii::$app->request->headers["token"];
        $encryptedData = \Yii::$app->request->post("encryptedData");
        $iv = \Yii::$app->request->post("iv");
        $business_id = \Yii::$app->request->headers->get("Enterprise-Id");
        $signature = \Yii::$app->request->post("signature");
        $rawData = \Yii::$app->request->post("rawData");
        if(empty($token) || empty($encryptedData) || empty($iv) || empty($business_id) || empty($signature) || empty($rawData)){
            return ["code"=>400,"message"=>"请求参数错误"];
        }
        $entrance = new Entrance($business_id);
        $result = $entrance->__decryptToken($token);
        if($result){
            if(!$entrance->checkPrescription($token)){
                return ["code"=>40317 , "message"=> "登录信息已过期,请重新登录"];
            }
            if(!$entrance->checkSignature($signature , $rawData , $result["session_key"])){
                return ["code"=>400 , "message"=>"数据不完整"];
            }
            $app = Entrance::instance($business_id);
            $decryptedData  = $app->encryptor->decryptData($result["session_key"],$iv,$encryptedData);
            $small_user = SmallWechatUser::createUser($decryptedData);
            if(!empty($decryptedData["openId"]) && $small_user){
                return ["code"=>200,"data" => [
                    "user_id" => $small_user->id
                ] ,"message"=>"登录成功"];
            }
        }
        return ["code"=>400,"message"=>"登录失败"];
    }


    /**
     * @return array
     * @throws \EasyWeChat\Kernel\Exceptions\DecryptException
     * 获取手机号码
     */
    public function actionGetPhone(){
        $token = \Yii::$app->request->headers["token"];
        $business_id = \Yii::$app->request->headers->get("Enterprise-Id");
        $encryptedData = \Yii::$app->request->post("encryptedData");
        $card_id = \Yii::$app->request->post("card_id");
        $iv = \Yii::$app->request->post("iv");
        $entrance = new Entrance($business_id);
        $result = $entrance->__decryptToken($token);
        if($result){
            if(!$entrance->checkPrescription($token)){
                return ["code"=>400 , "message"=> "登录信息已过期,请重新登录"];
            }
            $app = Entrance::instance($business_id);
            $decryptedData  = $app->encryptor->decryptData($result["session_key"],$iv,$encryptedData);
            if(!empty($decryptedData["phoneNumber"]) && BusinessCardsRecords::savePhone($card_id , $decryptedData["phoneNumber"])){
                return ["code"=>200,"message"=>"获取手机号成功"];
            }
        }
        return ["code"=>400,"message"=>"获取失败"];
    }

    /**
     * @return bool
     * 验证token是否过期
     */
    public function actionCheck(){
        $token = \Yii::$app->request->headers->get("token");
        $business_id = \Yii::$app->request->headers->get("Enterprise-Id");
        $result = (new Entrance($business_id))->checkPrescription($token);
        return $result;
    }

    /**
     * @return array
     * @throws \EasyWeChat\Kernel\Exceptions\InvalidArgumentException
     * 获取名片海报
     */
    public function actionGetPoster(){
        $card = BusinessCards::findOne(\Yii::$app->request->post("card_id"));
        if(empty($card)){
            return ["code" => 400 , "message" => "名片不存在"];
        }
        return ["code" => 200 , "data" => $card->getQrcode() , "message" => "请求成功"];
    }


    public function actionTest(){
//        $work = \common\enterprise\Entrance::instance(1);
////        $app = $work->setAgentId("app");
////        $user_info = $app->user->get("WangCongRong");
//        $a = (array)$work;
//        echo "<pre>";
//        print_r($work);
//        print_r($a);
        $result =count("3523");

        print_r($result);die;
//        Message::sendTextMessage(1 ,"WangCongRong","aaa");
        $reply_template_id = SmallProgram::findByEnterpriseId(1)->getReplyTemplateId();
        $app = \common\program\Entrance::instance(1);
        $form_id =  EnterpriseFormId::getFormId("odPUY49YA_EN96f1CJIpS9IhWO8g");
        $result = $app->template_message->send([
            'touser' => "odPUY49YA_EN96f1CJIpS9IhWO8g",
            'template_id' => $reply_template_id,
            'page' => 'pages/card/index?card_id=' . 6,
            'form_id' => $form_id,
            'data' => [
                'keyword1' => "哈哈",
                'keyword2' => date("Y-m-d H:i:s"),
                'keyword2' => "bb",
            ]
        ]);
        if($result["errcode"] == 0 && $result["errmsg"] == "ok"){
            EnterpriseFormId::useFormId($form_id);
        }
        print_r($result);die;

    }


    public function actionCache(){
        $app = Entrance::instance(1);
        $redis = new \Redis();
        $cache = new RedisCache($redis);
//        $app->
        $app->rebind("cache" ,$cache);

        $app = Factory::officialAccount($config);
        $app->rebind("cache" , $cache);
    }


}